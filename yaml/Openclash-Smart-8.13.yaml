# 七尺宇 + 安格世界 ， C❄️ OpenClash配置整合-23 , 2025-7-30
# 七尺宇https://www.youtube.com/@qichiyu , 安格世界https://www.youtube.com/@Ange-Digital-Life
# openclash设置和配置教程参：https://www.youtube.com/watch?v=S2l_0g4EOHk&t
# sub-store设置和配置教程参：https://www.youtube.com/watch?v=bqEFhWHG0dg
# 注意规则在满足自己需求情况下，尽量做到精简，不要过度复杂，以免影响性能。
# ⭐️⭐️如果遇到无法识别smart策略组则，需要更新openclash内核才能使用此配置。SSH连接OpenWrt后，输入下方内容(一定要删掉#   #后面有空格)，然后手动更新。注意手动更新后，，不要在openclash再次更新内核。
# wget -O smartcore.sh --no-check-certificate https://github.com/666OS/YYDS/raw/main/JS/smartcore.sh && chmod +x smartcore.sh && ./smartcore.sh
# ⭐️⭐️smart策略组必须要需要模型，下载下方链接内Model.bin（打开链接往下拉能看到）文件放到OpenClash: (/etc/openclash/Model.bin)，如果不想用模型：uselightgbm: true,collectdata: true,  智能策略组的这两个参数改成false
# https://github.com/vernesong/mihomo/releases

# ==================== 锚点配置 ====================
# 节点筛选正则表达式锚点
filter-anchor:
  FilterHK: &FilterHK '^(?=.*(?i)(港|🇭🇰|HK|Hong|HKG))(?!.*(法国|欧港专线|俄罗斯|Russia|🇷🇺|德国|Deutschland|🇩🇪|土耳其|Türkiye|Turkiye|🇹🇷|英国|UK|🇬🇧|摩尔多瓦|Moldova|🇲🇩|群|邀请|返利|循环|官网|客服)).*$'
  FilterSG: &FilterSG '^(?=.*(?i)(坡|🇸🇬|SG|Sing|SIN|XSP))(?!.*(群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场)).*$'
  FilterJP: &FilterJP '^(?=.*(?i)(日|🇯🇵|JP|Japan|NRT|HND|KIX|CTS|FUK))(?!.*(尼日利亚|Nigeria|群|邀请|返利|循环|官网|客服)).*$'
  FilterKR: &FilterKR '^(?=.*(?i)(韩|🇰🇷|KR|Korea|South|首尔|Seoul))(?!.*(乌克兰|Ukraine|南非|South Africa|群|邀请|返利|循环|官网|客服)).*$'
  FilterUS: &FilterUS '^(?=.*(?i)(美|🇺🇸|US|USA|JFK|LAX|ORD|ATL|DFW|SFO|MIA|SEA|IAD))(?!.*(澳大利亚|Australia|亚美尼亚|俄罗斯|Russia|群|邀请|返利|循环|官网|客服)).*$'
  FilterEU: &FilterEU '^(?=.*(?i)(奥|比|保|克罗地亚|塞|捷|丹|爱沙|芬|法|德|希|匈|爱尔|意|拉|立|卢|马其它|荷|波|葡|罗|斯洛伐|斯洛文|西|瑞|英|🇧🇪|🇨🇿|🇩🇰|🇫🇮|🇫🇷|🇩🇪|🇮🇪|🇮🇹|🇱🇹|🇱🇺|🇳🇱|🇵🇱|🇸🇪|🇬🇧|CDG|FRA|AMS|MAD|BCN|FCO|MUC|BRU))(?!.*(群|邀请|返利|循环|官网|客服)).*$'
  FilterOther: &FilterOther '^(?!.*(直连|港|🇭🇰|HK|Hong|HKG|坡|🇸🇬|SG|Sing|SIN|XSP|日|🇯🇵|JP|Japan|NRT|HND|KIX|CTS|FUK|韩|🇰🇷|KR|Korea|South|首尔|Seoul|美|🇺🇸|US|USA|JFK|LAX|ORD|ATL|DFW|SFO|MIA|SEA|IAD|奥|比|保|克罗地亚|塞|捷|丹|爱沙|芬|法|德|希|匈|爱尔|意|拉|立|卢|马其它|荷|波|葡|罗|斯洛伐|斯洛文|西|瑞|英|🇧🇪|🇨🇿|🇩🇰|🇫🇮|🇫🇷|🇩🇪|🇮🇪|🇮🇹|🇱🇹|🇱🇺|🇳🇱|🇵🇱|🇸🇪|🇬🇧|CDG|FRA|AMS|MAD|BCN|FCO|MUC|BRU|群|邀请|返利|循环|官网|客服)).*$'

# 代理提供者模板 - 订阅源基础配置
BaseProvider: &BaseProvider {type: http, interval: 86400, proxy: DIRECT, health-check: {enable: true, url: 'https://www.gstatic.com/generate_204', interval: 300}, filter: '^(?!.*(群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|USE|USED|TOTAL|EXPIRE|EMAIL|Panel|Channel))'}

# 策略组类型模板 - 定义不同的策略组基础配置
BaseLB: &BaseLB {type: load-balance, interval: 200, lazy: true, url: 'https://www.gstatic.com/generate_204'}

# 机场订阅
proxy-providers:
  优质服务商: {<<: *BaseProvider, url: '优质订阅源地址1', override: {additional-prefix: '[优] '}}
  次优服务商: {<<: *BaseProvider, url: '优质订阅源地址2', override: {additional-prefix: '[优] '}} 
  备用服务商: {<<: *BaseProvider, url: '备用订阅源地址', override: {additional-prefix: '[备] '}}
  聚合服务商: {<<: *BaseProvider, url: '自建订阅源地址', override: {additional-prefix: '[自建] '}}
  落地服务商: {<<: *BaseProvider, url: '中转订阅源地址', override: {additional-prefix: '[中] ', dialer-proxy: 中转服务}}

# 节点信息
proxies:
  - {name: 直连, type: direct, udp: true}

# 全局配置
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7895

allow-lan: true
mode: rule
log-level: info

ipv6: true

find-process-mode: 'off'
# interface-name: en0
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
disable-keep-alive: false

# Smart模型自动更新
lgbm-auto-update: true
lgbm-update-interval: 72
lgbm-url: https://github.com/vernesong/mihomo/releases/download/LightGBM-Model/Model-large.bin

# 控制面板
rmanual-controller: 0.0.0.0:9090
external-ui: ui
external-ui-name: zashboard
external-ui-url: https://github.moeyy.xyz/https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip
secret: "123456789"

# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:7874
  ipv6: true
  prefer-h3: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.20.0.1/16
  default-nameserver:
    - 119.29.29.29
    - 180.184.1.1
  proxy-server-nameserver: [quic://dns.alidns.com/dns-query, https://sm2.doh.pub/dns-query]
  direct-nameserver: [quic://dns.alidns.com/dns-query, https://sm2.doh.pub/dns-query]
  nameserver:
    - https://dns.alidns.com/dns-query
    - https://doh.pub/dns-query

  fake-ip-filter:
    - '*.lan'             # 局域网设备（如 router.lan）
    - '*.local'           # mDNS 服务（如 printer.local）
    - 'time.*.com'        # 时间服务器（如 time.apple.com）
    - '*.steamcontent.com' # Steam 更新域名
    - '*.nflxvideo.net'   # Netflix CDN
    - '*.bt-tracker.*'    # BT Tracker 服务器
    - 'localhost'
    - '*.msftconnecttest.com' # Windows 网络检测
    - '*.playstation.net'
    - '*.playstation.com'
    - '*.playstationnetwork.com'
    - '*.sonyentertainmentnetwork.com'

# 入站
tun:
  enable: true
  stack: gvisor
  device: utun
  endpoint-independent-nat: true
  auto-route: false
  auto-detect-interface: false
  auto-redirect: false
  strict-route: false

profile:
  store-selected: true
  store-fake-ip: true

# 出站策略
pr: &pr {type: select, proxies: [默认代理, 港区-稳定IP, 日本-稳定IP, 美国-稳定IP, 新国-稳定IP, 韩国-稳定IP, 欧洲-稳定IP, 香港智能, 日本智能, 美国智能, 新国智能, 韩国智能, 欧洲智能, 香港负载均衡, 日本负载均衡, 新国负载均衡, 韩国负载均衡, 美国负载均衡, 欧洲负载均衡, 香港自动, 日本自动, 美国自动, 新国自动, 韩国自动, 欧洲自动, 自动选择, 香港故转, 日本故转, 美国故转, 新国故转, 韩国故转, 欧洲故转, 香港节点, 日本节点, 新国节点, 美国节点, 韩国节点, 欧洲节点, 其他节点, 全部节点, 直连, 自建/家宽节点]}
pr_b: &pr_b {type: select, proxies: [港区-稳定IP, 日本-稳定IP, 美国-稳定IP, 新国-稳定IP, 韩国-稳定IP, 欧洲-稳定IP, 香港智能, 日本智能, 美国智能, 新国智能, 韩国智能, 欧洲智能, 香港负载均衡, 日本负载均衡, 新国负载均衡, 韩国负载均衡, 美国负载均衡, 欧洲负载均衡, 香港自动, 日本自动, 美国自动, 新国自动, 韩国自动, 欧洲自动, 自动选择, 香港故转, 日本故转, 美国故转, 新国故转, 韩国故转, 欧洲故转, 香港节点, 日本节点, 新国节点, 美国节点, 韩国节点, 欧洲节点, 其他节点, 全部节点, 直连, 自建/家宽节点]}
pr_c: &pr_c {type: select, proxies: [直连, 默认代理, 港区-稳定IP, 日本-稳定IP, 美国-稳定IP, 新国-稳定IP, 韩国-稳定IP, 欧洲-稳定IP, 香港智能, 日本智能, 美国智能, 新国智能, 韩国智能, 欧洲智能, 香港负载均衡, 日本负载均衡, 新国负载均衡, 韩国负载均衡, 美国负载均衡, 欧洲负载均衡, 香港自动, 日本自动, 美国自动, 新国自动, 韩国自动, 欧洲自动, 自动选择, 香港故转, 日本故转, 美国故转, 新国故转, 韩国故转, 欧洲故转, 香港节点, 日本节点, 新国节点, 美国节点, 韩国节点, 欧洲节点, 其他节点, 全部节点, 自建/家宽节点]}

proxy-groups:
  - {name: 默认代理, <<: *pr_b, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Global.png}
  - {name: Ai, <<: *pr, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/AI.png}
  - {name: Telegram, <<: *pr, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Telegram_X.png}
  - {name: YouTube, <<: *pr, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/DomesticMedia.png}
  - {name: Google, <<: *pr, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Google_Search.png}
  - {name: Twitter(X), <<: *pr, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/PBS.png}
  - {name: GitHub, <<: *pr, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Global.png}
  - {name: Emby, <<: *pr, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Emby.png}
  - {name: Video, <<: *pr, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/DomesticMedia.png}
  - {name: Social, <<: *pr, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/PBS.png}
  - {name: WhatsApp, <<: *pr, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Whatsapp.png}
  - {name: OneDrive, <<: *pr_c, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Microsoft.png}
  - {name: Microsoft, <<: *pr_c, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Microsoft.png}
  - {name: Speedtest, <<: *pr, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Speedtest.png}
  - {name: PayPal, <<: *pr, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Cryptocurrency_3.png}
  - {name: GameDownload, <<: *pr_c, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Game.png}
  - {name: Steam, <<: *pr, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Game.png}
  - {name: Game, <<: *pr, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Game.png}
  - {name: Apple, <<: *pr_c, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Apple.png}
  - {name: TeamViewer, <<: *pr_c, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Global.png}
  - {name: 漏网之鱼, <<: *pr, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Final.png}

# 手选策略组选择最快的节点，配合稳定IP策略组使用
  - {name: 香港节点, type: select, include-all: true, filter: *FilterHK, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Hong_Kong.png}
  - {name: 日本节点, type: select, include-all: true, filter: *FilterJP, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Japan.png}
  - {name: 美国节点, type: select, include-all: true, filter: *FilterUS, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/United_States.png}
  - {name: 新国节点, type: select, include-all: true, filter: *FilterSG, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Singapore.png}
  - {name: 韩国节点, type: select, include-all: true, filter: *FilterKR, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Korea.png}
  - {name: 欧洲节点, type: select, include-all: true, filter: *FilterEU, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/European_Union.png}
  - {name: 其他节点, type: select, include-all: true, filter: *FilterOther, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Global.png}
  - {name: 全部节点, type: select, include-all: true, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Clubhouse.png}

# 用于IP敏感的专用嵌套策略组，故障转移策略组嵌套 手选 + smart策略组
  - {name: 港区-稳定IP, type: fallback, tolerance: 30, interval: 40, lazy: false, proxies: [香港节点, 香港智能], icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Hong_Kong.png}
  - {name: 日本-稳定IP, type: fallback, tolerance: 30, interval: 40, lazy: false, proxies: [日本节点, 日本智能], icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Japan.png}
  - {name: 美国-稳定IP, type: fallback, tolerance: 30, interval: 40, lazy: false, proxies: [美国节点, 美国智能], icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/United_States.png}
  - {name: 新国-稳定IP, type: fallback, tolerance: 30, interval: 40, lazy: false, proxies: [新国节点, 新国智能], icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Singapore.png}
  - {name: 韩国-稳定IP, type: fallback, tolerance: 30, interval: 40, lazy: false, proxies: [韩国节点, 韩国智能], icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Korea.png}
  - {name: 欧洲-稳定IP, type: fallback, tolerance: 30, interval: 40, lazy: false, proxies: [欧洲节点, 欧洲智能], icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/European_Union.png}

# 策略组
  - {name: 香港智能, type: smart, include-all: true, uselightgbm: true, collectdata: false, health-check: {enable: true, url: "https://www.gstatic.com/generate_204", interval: 60, tolerance: 2}, interval: 300, filter: *FilterHK, url: "http://www.gstatic.com/generate_204", lazy: true, persistent: true, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Hong_Kong.png}
  - {name: 日本智能, type: smart, include-all: true, uselightgbm: true, collectdata: false, health-check: {enable: true, url: "https://www.gstatic.com/generate_204", interval: 60, tolerance: 2}, interval: 300, filter: *FilterJP, url: "http://www.gstatic.com/generate_204", lazy: true, persistent: true, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Japan.png}
  - {name: 美国智能, type: smart, include-all: true, uselightgbm: true, collectdata: false, health-check: {enable: true, url: "https://www.gstatic.com/generate_204", interval: 60, tolerance: 2}, interval: 300, filter: *FilterUS, url: "http://www.gstatic.com/generate_204", lazy: true, persistent: true, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/United_States.png}
  - {name: 新国智能, type: smart, include-all: true, uselightgbm: true, collectdata: false, health-check: {enable: true, url: "https://www.gstatic.com/generate_204", interval: 60, tolerance: 2}, interval: 300, filter: *FilterSG, url: "http://www.gstatic.com/generate_204", lazy: true, persistent: true, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Singapore.png}
  - {name: 韩国智能, type: smart, include-all: true, uselightgbm: true, collectdata: false, health-check: {enable: true, url: "https://www.gstatic.com/generate_204", interval: 60, tolerance: 2}, interval: 300, filter: *FilterKR, url: "http://www.gstatic.com/generate_204", lazy: true, persistent: true, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Korea.png}
  - {name: 欧洲智能, type: smart, include-all: true, uselightgbm: true, collectdata: false, health-check: {enable: true, url: "https://www.gstatic.com/generate_204", interval: 60, tolerance: 2}, interval: 300, filter: *FilterEU, url: "http://www.gstatic.com/generate_204", lazy: true, persistent: true, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/European_Union.png}
  
  - {name: 香港自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: *FilterHK, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Hong_Kong.png}
  - {name: 日本自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: *FilterJP, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Japan.png}
  - {name: 美国自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: *FilterUS, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/United_States.png}
  - {name: 新国自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: *FilterSG, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Singapore.png}
  - {name: 韩国自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: *FilterKR, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Korea.png}
  - {name: 欧洲自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: *FilterEU, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/European_Union.png}
  - {name: 自动选择, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "^((?!(直连)).)*$", icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Clubhouse.png}
  
  - {name: 香港故转, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: *FilterHK, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Hong_Kong.png}
  - {name: 日本故转, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: *FilterJP, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Japan.png}
  - {name: 美国故转, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: *FilterUS, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/United_States.png}
  - {name: 新国故转, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: *FilterSG, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Singapore.png}
  - {name: 韩国故转, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: *FilterKR, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Korea.png}
  - {name: 欧洲故转, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: *FilterEU, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/European_Union.png}

# 负载均衡策略组
  - {name: 香港负载均衡, type: load-balance, strategy: round-robin, interval: 180, tolerance: 1, lazy: true, health-check: {enable: true, url: "https://www.gstatic.com/generate_204", interval: 30, tolerance: 1}, proxies: [香港智能, 香港自动, 香港节点], icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Round_Robin_1.png}
  - {name: 日本负载均衡, type: load-balance, strategy: round-robin, interval: 180, tolerance: 1, lazy: true, health-check: {enable: true, url: "https://www.gstatic.com/generate_204", interval: 30, tolerance: 1}, proxies: [日本智能, 日本自动, 日本节点], icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Round_Robin_1.png}
  - {name: 新国负载均衡, type: load-balance, strategy: round-robin, interval: 180, tolerance: 1, lazy: true, health-check: {enable: true, url: "https://www.gstatic.com/generate_204", interval: 30, tolerance: 1}, proxies: [新国智能, 新国自动, 新国节点], icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Round_Robin_1.png}
  - {name: 韩国负载均衡, type: load-balance, strategy: round-robin, interval: 180, tolerance: 1, lazy: true, health-check: {enable: true, url: "https://www.gstatic.com/generate_204", interval: 30, tolerance: 1}, proxies: [韩国智能, 韩国自动, 韩国节点], icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Round_Robin_1.png}
  - {name: 美国负载均衡, type: load-balance, strategy: round-robin, interval: 180, tolerance: 1, lazy: true, health-check: {enable: true, url: "https://www.gstatic.com/generate_204", interval: 30, tolerance: 1}, proxies: [美国智能, 美国自动, 美国节点], icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Round_Robin_1.png}
  - {name: 欧洲负载均衡, type: load-balance, strategy: round-robin, interval: 180, tolerance: 1, lazy: true, health-check: {enable: true, url: "https://www.gstatic.com/generate_204", interval: 30, tolerance: 1}, proxies: [欧洲智能, 欧洲自动, 欧洲节点], icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Round_Robin_1.png}

  - {name: 自建/家宽节点, type: select, include-all: true, filter: "(?i)(自建|The_house|home)", icon: https://pub-8feead0908f649a8b94397f152fb9cba.r2.dev/private_node.png}
  - {name: 游戏节点, type: select, include-all: true, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Game.png}

  - {name: 中转服务, <<: *BaseLB, use: [优质服务商], filter: '香港', hidden: true, icon: https://git.imee.me/https://github.com/Koolson/Qure/raw/master/IconSet/Color/Round_Robin.png}

# 规则匹配
# 此规则部分没有做防泄露处理，因为弊严重大于利！
rules:
  - DOMAIN-SUFFIX,qichiyu.com,默认代理
  - RULE-SET,private_domain,直连
  - RULE-SET,apple_domain,Apple
  - RULE-SET,proxylite,默认代理
  - RULE-SET,ai,Ai
  - RULE-SET,telegram_domain,Telegram
  - RULE-SET,telegram_ip,Telegram,no-resolve
  - RULE-SET,youtube_domain,YouTube
  - RULE-SET,google_domain,Google
  - RULE-SET,Twitter_domain,Twitter(X)
  - RULE-SET,github_domain,GitHub
  - RULE-SET,TeamViewer_list,TeamViewer
  - RULE-SET,Emby_class-1,Emby
  - RULE-SET,Emby_class-2,Emby
  - RULE-SET,Emby_class-3,Emby
  - RULE-SET,Emby_class-4,Emby
  - RULE-SET,GameDownload_class-1,GameDownload
  - RULE-SET,GameDownload_class-2,GameDownload
  - RULE-SET,Steam_domain,Steam
  - RULE-SET,Video_class,Video
  - RULE-SET,Social_class,Social
  - RULE-SET,WhatsApp_class,WhatsApp
  - RULE-SET,Epic_class,Game
  - RULE-SET,Blizzard_class,Game
  - RULE-SET,UBI_class,Game
  - RULE-SET,Sony_class,Game
  - RULE-SET,Nintend_class,Game
  - RULE-SET,onedrive_domain,OneDrive
  - RULE-SET,microsoft_domain,Microsoft
  - RULE-SET,speedtest_domain,Speedtest
  - RULE-SET,paypal_domain,PayPal
  - RULE-SET,gfw_domain,默认代理
  - RULE-SET,geolocation-!cn,默认代理
  - RULE-SET,cn_domain,直连
  - RULE-SET,google_ip,Google,no-resolve
  - RULE-SET,cn_ip,直连
  - MATCH,漏网之鱼

# 规则集
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}

rule-providers:
  private_domain: { <<: *domain, url: "https://git.yylx.win/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  proxylite: { <<: *class, url: "https://git.yylx.win/https://raw.githubusercontent.com/qichiyuhub/rule/refs/heads/main/proxy.list"}
  ai: { <<: *domain, url: "https://git.yylx.win/https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-ai-!cn.mrs" }
  telegram_domain: { <<: *domain, url: "https://git.yylx.win/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  telegram_ip: { <<: *ip, url: "https://git.yylx.win/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  youtube_domain: { <<: *domain, url: "https://git.yylx.win/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  google_domain: { <<: *domain, url: "https://git.yylx.win/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  Twitter_domain: {<<: *domain, url: "https://git.yylx.win/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/x.mrs"}
  github_domain: { <<: *domain, url: "https://git.yylx.win/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  TeamViewer_list: {<<: *class, url: "https://git.yylx.win/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/TeamViewer/TeamViewer.list"}

  Emby_class-1: {<<: *class, url: "https://git.yylx.win/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/classical/category-emby.list"}
  Emby_class-2: {<<: *class, url: "https://git.yylx.win/https://raw.githubusercontent.com/666OS/YYDS/refs/heads/main/mihomo/rules/emby.list"}
  Emby_class-3: {<<: *class, url: "https://git.yylx.win/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Emby/Emby.list"}
  Emby_class-4: {<<: *class, url: "https://git.yylx.win/https://raw.githubusercontent.com/ddgksf2013/Filter/refs/heads/master/Emby.list"}

  Video_class: {<<: *class, url: "https://git.yylx.win/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/classical/category-entertainment.list"}
  Social_class: {<<: *class, url: "https://git.yylx.win/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/classical/category-social-media-!cn.list"}
  WhatsApp_class: {<<: *class, url: "https://git.yylx.win/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Whatsapp/Whatsapp.list"}
  GameDownload_class-1: {<<: *class, url: "https://git.yylx.win/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Game/GameDownload/GameDownload.list"}
  GameDownload_class-2: {<<: *class, url: "https://git.yylx.win/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/SteamCN/SteamCN.list"}
  Steam_domain: {<<: *domain, url: "https://git.yylx.win/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/steam.mrs"}
  Epic_class: {<<: *class, url: "https://git.yylx.win/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Epic/Epic.list"}
  EA_class: {<<: *class, url: "https://git.yylx.win/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/EA/EA.list"}
  Blizzard_class: {<<: *class, url: "https://git.yylx.win/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Blizzard/Blizzard.list"}
  UBI_class: {<<: *class, url: "https://git.yylx.win/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/UBI/UBI.list"}
  Sony_class: {<<: *class, url: "https://git.yylx.win/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Sony/Sony.list"}
  Nintend_class: {<<: *class, url: "https://git.yylx.win/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Nintendo/Nintendo.list"}
  paypal_domain: { <<: *domain, url: "https://git.yylx.win/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"}
  onedrive_domain: { <<: *domain, url: "https://git.yylx.win/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"}
  microsoft_domain: { <<: *domain, url: "https://git.yylx.win/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  apple_domain: { <<: *domain, url: "https://git.yylx.win/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  speedtest_domain: { <<: *domain, url: "https://git.yylx.win/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs"}
  gfw_domain: { <<: *domain, url: "https://git.yylx.win/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  geolocation-!cn: { <<: *domain, url: "https://git.yylx.win/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  cn_domain: { <<: *domain, url: "https://git.yylx.win/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  cn_ip: { <<: *ip, url: "https://git.yylx.win/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  google_ip: { <<: *ip, url: "https://git.yylx.win/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}





